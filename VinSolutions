using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

/*In the programming language of your choice, write a program that parses a sentence
and replaces each word with the following: first letter, number of distinct characters
between first and last character, and last letter.  For example, Smooth would become 
S3h, as would become a0s, and a would become a0.  Words are separated by spaces or 
non-alphabetic characters and these separators should be maintained in their original
form and location in the answer. */

public class Program
   {
      public void VinSolutions(string[] args)
       {

       }
       public static void Main(string[] args)
       {       
      
       string str;
       Console.WriteLine("Enter your sentence:");
       str = Console.ReadLine();
         string[] sentence = Regex.Split(str, @"\W+");
         List<string> newsentence = new List<string>();
         StringBuilder builder = new StringBuilder();
           foreach (string word in sentence)
           {
               newsentence.Add(word);

               string newword = null;
               if (word.Length > 1)
               {
                   int k = word.Length;
                   int samecharcount = 0;
                   int count = 0;

                   for (int i = 1; i < k - 1; i++)
                   {

                       if (word.ElementAt(i) != word.ElementAt(i + 1))
                       {

                           count++;

                       }
                       else
                       {
                           samecharcount++;
                       }
                   }                  
                       char firstChar = word[0];
                       char lastChar = word[word.Length - 1];
                       newword = String.Concat(firstChar, count.ToString(), lastChar);
                       Console.Write(newword+" ");
                }
               else
               {
                       int distinctCount = 0;
                       char firstChar = word[0];
                       char lastChar = word[word.Length - 1];
                       newword = String.Concat(firstChar, distinctCount.ToString());
                       Console.Write(newword+" ");
               }

           }
           
       }
   }
